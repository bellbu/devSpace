* 김치간 접속정보
1) 관리자 페이지 접속정보	
  ID : userve  / PW : userve311!	

2) 뮤지엄김치간 VPN 접속정보	
  https://ssl2.pulmuone.com/	
  ID : userve05  / PW : sslvpn!@34	
	
3) FTP 접속정보	
  홈페이지 서버1 : 211.233.54.38	
  홈페이지 서버2 : 211.233.54.39	
  ID : root  / PW : qhRWka!$$038 , qhRWka!$$039  ( 뒤 3자리 숫자는 각 서버별 IP 뒷자리 )	
	
4) DB(REAL)
192.1.5.21:3306	
database : kimchikan	
ID : root / PW : Rlacl0619)^!(	
	
5) DB(DEV) 	
192.168.31.214:3306	
database : kimchikan	
id : root / PW : Userve0822!	
	

* 김치간 알림톡
1) 알림톡 작업내역
  - 6월 20일 예약완료(예약안내), 3일전, 당일
  - 7월 3일 예약완료(예약안내), 취소, 당일
  - 8월 22일 예약완료(예약안내), 3일전, 당일

2) 작업 방법
  - 템플릿 등록 테이블 - wp_template
  - 예약안내(예약안내) 템플릿: 셀렉트 박스 등록 PHP - html-admin-schedule-add.php 
    (서버 파일경로: /home/pmouser/public_html/wp-content/plugins/kimchigan/admin/partials)
  - 3일전 템플릿: 프로시저 - earlyVisitGuideSms(3일전)
  - 당일 템플릿: 프로시저 - earlyVisitGuideSms_day(당일): 예약안내 추가 후 당일 템플릿 조건 추가 
  - 취소 템플릿: PHP - class-hamakimchi-ajaxs.php (do_reserved_cancel / do_reserved_cancel_new / do_hompage_reserve_cancel 함수에 취소 템플릿 추가)
  - 알림톡 예약 테이블: wp_posts_sms

3) 서버반영 경로
/home/pmouser/public_html/wp-content 해당경로

* 김치간 뮤지엄 중복검사
wp_posts.id = wp_postmeta.post_id, wp_rsv_m.post_id, wp_rsv_d.post_id
wp_postmeta.meta_key = wp_rsv_m.meta_key,wp_rsv_d.meta_key

1. 테이블 정리
  1) 프로그램 관리 테이블 : wp_posts (PK: ID)
  2) 구 예약데이터 테이블 : wp_postmeta(PK: meta_id)
  3) 신규 예약데이터 테이블: wp_rsv_m(PK: rsv_no) - 개인정보 암호화 되어있음
  4) 신규 예약데이터 디테일 테이블: wp_rsv_d(PK: rsv_no, rsv_seq) - 개인정보 암호화 되어있음

2. 발생예상 문제
  - 구 예약키(meta_key)는 시간으로 만들어지기 때문에 중복문제가 발생할 가능성 있음(한 프로그램에 예약자는 다른데 예약키가 같은 경우)
  - 아래 쿼리 중 키(meta_key) 중복조회 쿼리 실행하여 조회되는게 없을 경우 김치간에서 메일오는 건에 대하여 확인해주면 됨.

3. 프로그램 오픈 시 체크
  1) 기존 예약키 중복으로 A의 예약을 취소 시 B의 예약도 취소 될 수 있음.
    - 신규 예약데이터 테이블(wp_rsv_m)의 예약번호(rsv_no)는 다르게 생성되더라도 구 예약키(meta_key)가 동일하여 구 예약테이블의 예약데이터를 취소 시키고 프로그램 인원도 따로 조정될 수 있음.
    - 처리방법 : meta_key의 값을 1씩 증가해서 조회하여 데이터가 없을 경우 중복되는 예약 중 하나를 해당 key로 변경해준다
              구 예약테이블, 신규예약 마스터, 신규예약 디테일 3개 테이블 수정 필요

  2) 신규 예약테이블 메인(wp_rsv_m)에 데이터가 생성되지 않을 수 있음.
    - 두건의 예약건이 하나의 예약번호(rsv_no)에 seq가 확장되어 디테일 테이블(wp_rsv_d)에 생성될 수 있음.
      ex) 원래대로면 (MK000001, 1),  (MK000002, 1) 로 생성되어야 하나, (MK000001, 1),  (MK000001, 2) 로 생성되는 케이스 존재
    - 처리방법 : 디테일 meta_key 중복 해소, 신규예약번호(MAX(RSV_NO) 생성하여 분기 => 마스터 테이블에 해당 정보 등록시켜 1:1 관계 만들어 줌

  3) 1번의 케이스로 프로그램인원이 맞지 않을 수 있음.
    - 실제 예약데이터의 인원수와 프로그램의 예약인원수가 맞지 않는 케이스 존재
    - 처리방법 : wp_posts의 post_date로 프로그램 일정 확인 후 post_content값 중 reserved_count 예약인원 확인 
                wp_posts의 예약인원, wp_postmeta 의 예약인원, wp_rsv_m 의 예약인원이 일치해야함.

  4) 인원 초과인 경우
   - wp_posts에서  reserv_count 25로 변경


※ wp_posts.id 인원 = wp_postmeta.post_id 인원 합산 = wp_rsv_m.post_id 인원 합산
※ 각 테이블의 meta_key 1:1:1 관계여야 함 

1. 중복키 없음
2. 메타키 생성 확인 완료

--------------------------------------------------------------------------------------------------

* 쿼리 조회
1) 현재 이후 프로그램의 구 예약 데이터 메타키(meta_key) 중복조회 쿼리
  select * 
  from (
        select post_id,
               meta_key,
               count(*) cnt 
        from wp_postmeta 
        where post_id in(select id from wp_posts wp where post_date > now())
        group by post_id, meta_key
      ) a
  where a.cnt > 1

2) 프로그램(wp_posts) 조회(조건은 변경해도됨)
  select * 
  from wp_posts
  where post_date like '2023-09%'

3) 구 예약데이터 테이블(wp_postmeta) 조회(조건은 변경해서 조회)
  select * 
  from wp_postmeta wp 
  where 1=1
  and post_id = 10484
  and meta_key = '1692334885'

4) 신규 예약데이터 테이블 마스터(wp_rsv_m) 조회(조건은 변경해서 조회)
  SELECT rsv_no,
        post_id,
        meta_key,
        cast(AES_DECRYPT(UNHEX(name), 'name') as char(127) character set utf8)   name,
        cast(AES_DECRYPT(UNHEX(hp_no), 'hp_no') as char(127) character set utf8) hp_no,
        cast(AES_DECRYPT(UNHEX(mail), 'mail') as char(127) character set utf8) mail,
        cast(AES_DECRYPT(UNHEX(home_addr1), 'addr1') as char(127) character set utf8) addr1,
        cast(AES_DECRYPT(UNHEX(home_addr2), 'addr2') as char(127) character set utf8) addr2,
        mem_cnt 
  FROM wp_rsv_m a
  where 1=1
  and rsv_no = 'MK?'
  #and post_id = ?
  #and meta_key = '?'



5) 신규 예약데이터 테이블 디테일(wp_rsv_d) 조회(조건은 변경해서 조회)
  SELECT rsv_no,
         post_id,
         meta_key,
         rsv_seq,
         cast(AES_DECRYPT(UNHEX(name), 'name') as char(127) character set utf8)   name,
         cast(AES_DECRYPT(UNHEX(hp_no), 'hp_no') as char(127) character set utf8) hp_no,
         cast(AES_DECRYPT(UNHEX(mail), 'mail') as char(127) character set utf8) mail,
         ins_date,
         mem_cnt  
  from wp_rsv_d
  where 1=1
  and rsv_no = 'MK233548'
  #and post_id = 10488
  #and meta_key = '1692335096'
  order by rsv_no,rsv_seq


6) 구 예약테이블(wp_postmeta) 인원체크 ( 프로그램 별 인원체크 )
  select * 
  from wp_postmeta
  where post_id = 10489
  and meta_value like '%num";s:1%'

  select SUBSTRING_INDEX(meta_value, 'num";s:1:', -1) AS cnt
  		 ,meta_value
  from wp_postmeta
  where post_id = 10366
  and meta_value like '%num";s:1%'


7) 신규 예약데이터 테이블 마스터(wp_rsv_m) 인원체크
  select post_id,
        sum(mem_cnt) 
  from wp_rsv_m
  where post_id between 10476 and 10489
  group by post_id


8) 개인정보 수정시 암호화 업데이트
  UPDATE wp_rsv_m
  SET
      name = hex(aes_encrypt(%s,'name')) ,
      hp_no = hex(aes_encrypt(%s,'hp_no')) ,
      mail = hex(aes_encrypt(%s,'mail')) ,
      mem_cnt = %d,
      upd_date = NOW()
  WHERE rsv_no = %s



===============================================================================

* 메타키 중복키 제거 쿼리
  
 -- wp_postmeta / wp_rsv_m / wp_rsv_d 
  
select * 
from (
	  select post_id,
	         meta_key,
	         count(*) cnt 
	  from wp_postmeta 
	  where post_id in(select id from wp_posts wp where post_date > now())
	  group by post_id, meta_key
     ) a
where a.cnt > 1
  
select * 
from wp_postmeta wp 
where 1=1
and post_id = 10589
and meta_key = '1695359058'
  
  
SELECT rsv_no,
        post_id,
        meta_key,
        cast(AES_DECRYPT(UNHEX(name), 'name') as char(127) character set utf8)   name,
        cast(AES_DECRYPT(UNHEX(hp_no), 'hp_no') as char(127) character set utf8) hp_no,
        cast(AES_DECRYPT(UNHEX(mail), 'mail') as char(127) character set utf8) mail,
        cast(AES_DECRYPT(UNHEX(home_addr1), 'addr1') as char(127) character set utf8) addr1,
        cast(AES_DECRYPT(UNHEX(home_addr2), 'addr2') as char(127) character set utf8) addr2,
        mem_cnt 
FROM wp_rsv_m a
where 1=1
and post_id = 10589
and meta_key = '1695359058'
  

SELECT rsv_no,
       post_id,
       meta_key,
       rsv_seq,
       cast(AES_DECRYPT(UNHEX(name), 'name') as char(127) character set utf8)   name,
       cast(AES_DECRYPT(UNHEX(hp_no), 'hp_no') as char(127) character set utf8) hp_no,
       cast(AES_DECRYPT(UNHEX(mail), 'mail') as char(127) character set utf8) mail,
       ins_date,
       mem_cnt  
from wp_rsv_d
where 1=1
and post_id = 10589
and meta_key = '1695359058'
  